{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/SearchBar/SearchBar.module.css","components/SearchBar/SearchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Loader/Loader.jsx","icon-close.svg","components/Modal/Modal.jsx","App.js","services/api.js","reportWebVitals.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","SearchBar","onSubmit","className","s","SearchForm","e","preventDefault","target","lastChild","value","trim","toLowerCase","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","ImageGalleryItem","image","onImgClick","id","webformatURL","largeImageURL","onClick","src","alt","ImageGalleryItemImage","ImageGallery","images","map","Button","onLoadMore","loader","color","height","width","timeout","_path","_path2","_excluded","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgIconClose","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","d","fill","ForwardRef","modalRoot","document","querySelector","Modal","onCloseModal","handleOverlay","createPortal","Overlay","closeModal","CloseLogo","App","useState","setImages","loading","setLoading","searchQuery","setSearchQuery","page","setPage","bigImg","setBigImg","getImages","imageNames","url","fetch","then","response","json","fetchImages","resp","hits","toast","oldImages","catch","error","console","log","finally","useEffect","window","scrollTo","top","documentElement","scrollHeight","behavior","handleKeyDown","code","addEventListener","oldPage","autoClose","currentTarget","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0c7a816a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__23y4J\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3r_Zq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3eT3Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__rzOxR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3Kbky\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"SearchBar_SearchBar__3WA7r\",\"SearchForm\":\"SearchBar_SearchForm__4G5iN\",\"SearchFormButton\":\"SearchBar_SearchFormButton__3Uyns\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__1rXbi\",\"SearchFormInput\":\"SearchBar_SearchFormInput__31rpj\"};","import s from \"./SearchBar.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function SearchBar({ onSubmit }) {\r\n  return (\r\n    <>\r\n      <header className={s.SearchBar}>\r\n        <form\r\n          className={s.SearchForm}\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            if (e.target.lastChild.value.trim() === \"\") {\r\n              return;\r\n            }\r\n            onSubmit(e.target.lastChild.value.toLowerCase());\r\n          }}\r\n        >\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import s from \"./ImageGalleryItem.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nexport default function ImageGalleryItem({ image, onImgClick }) {\r\n  const { id, webformatURL, largeImageURL } = image;\r\n  return (\r\n    <li className={s.ImageGalleryItem} key={id}>\r\n      <img\r\n        onClick={() => {\r\n          onImgClick(largeImageURL);\r\n        }}\r\n        src={webformatURL}\r\n        alt=\"images\"\r\n        className={s.ImageGalleryItemImage}\r\n        data-sours={largeImageURL}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  images: PropTypes.array,\r\n  onImgClick: PropTypes.func.isRequired,\r\n};\r\n","import ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport s from \"./ImageGallery.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nexport default function ImageGallery({ images, onImgClick }) {\r\n  return (\r\n    <>\r\n      <ul className={s.ImageGallery}>\r\n        {images.map((image) => {\r\n          return (\r\n            <ImageGalleryItem\r\n              image={image}\r\n              key={image.id}\r\n              onImgClick={onImgClick}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array,\r\n  onImgClick: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Button.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Button({ onLoadMore }) {\r\n  return (\r\n    <button className={s.Button} type=\"button\" onClick={() => onLoadMore()}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\n","import Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport s from \"./Loader.module.css\";\r\n\r\nexport default function loader() {\r\n  return (\r\n    <Loader\r\n      className={s.loader}\r\n      type=\"ThreeDots\"\r\n      color=\"#00BFFF\"\r\n      height={80}\r\n      width={80}\r\n      timeout={3000}\r\n    />\r\n  );\r\n}\r\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconClose(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconClose);\nexport default __webpack_public_path__ + \"static/media/icon-close.30051ce6.svg\";\nexport { ForwardRef as ReactComponent };","import s from \"./Modal.module.css\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { ReactComponent as CloseLogo } from \"../../icon-close.svg\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ src, onCloseModal, handleOverlay }) {\r\n  return createPortal(\r\n    <>\r\n      <div className={s.Overlay} onClick={handleOverlay}>\r\n        <div className={s.Modal}>\r\n          <img src={src} alt=\"\" width=\"1200px\" height=\"800px\" />\r\n          <button\r\n            className={s.closeModal}\r\n            type=\"button\"\r\n            onClick={() => onCloseModal()}\r\n          >\r\n            <CloseLogo className={s.CloseLogo} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  onCloseModal: PropTypes.func.isRequired,\r\n  handleOverlay: PropTypes.func.isRequired,\r\n};\r\n","import \"./App.css\";\n\nimport { useState, useEffect } from \"react\";\nimport SearchBar from \"./components/SearchBar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport Loader from \"./components/Loader\";\nimport Modal from \"./components/Modal/Modal\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport fetchImages from \"./services/api\";\n\nexport default function App() {\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const [bigImg, setBigImg] = useState(null);\n\n  const onSubmit = (imageNames) => {\n    if (searchQuery !== imageNames) {\n      setImages([]);\n      setPage(1);\n      setSearchQuery(imageNames);\n    }\n  };\n\n  const onCloseModal = () => {\n    setBigImg(null);\n  };\n  const onImgClick = (largeImageURL) => {\n    setBigImg(largeImageURL);\n  };\n\n  const getImages = () => {\n    setLoading(true);\n    fetchImages(page, searchQuery)\n      .then((resp) => {\n        if (resp.hits.length === 0) {\n          toast(\"Уточните критерии поиска!\");\n        }\n        setImages((oldImages) => [...oldImages, ...resp.hits]);\n      })\n      .catch((error) => console.log(error))\n      .finally(() => setLoading(false));\n  };\n\n  useEffect(() => {\n    if (searchQuery === \"\") return;\n    getImages();\n  }, [searchQuery, page]);\n\n  useEffect(() => {\n    if (page > 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }, [images]);\n\n  const handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      onCloseModal();\n    }\n  };\n\n  const handleOverlay = (e) => {\n    if (e.currentTarget === e.target) {\n      onCloseModal();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      window.addEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n\n  const onLoadMore = () => {\n    setPage((oldPage) => oldPage + 1);\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={onSubmit} />\n      <ImageGallery images={images} onImgClick={onImgClick} />\n      {loading && <Loader />}\n      {images.length > 0 && <Button onLoadMore={onLoadMore} />}\n      <ToastContainer autoClose={3000} />\n      {bigImg && (\n        <Modal\n          src={bigImg}\n          onCloseModal={onCloseModal}\n          handleOverlay={handleOverlay}\n        />\n      )}\n    </>\n  );\n}\n// export default class App extends React.Component {\n//   state = {\n//     images: [],\n//     loading: false,\n//     imageNames: \"\",\n//     page: 1,\n//     bigImg: null,\n//   };\n// onSubmit = (imageNames) => {\n//   if (this.state.imageNames !== imageNames) {\n//     this.setState({ images: [], page: 1, imageNames });\n//   }\n// };\n\n// onCloseModal = () => {\n//   this.setState({ bigImg: null });\n// };\n\n// onImgClick = (largeImageURL) => {\n//   this.setState({ bigImg: largeImageURL });\n// };\n\n// getImages = () => {\n//   this.setState({ loading: true });\n//   fetchImages(this.state.page, this.state.imageNames)\n//     .then((resp) => {\n//       if (resp.hits.length === 0) {\n//         toast(\"Уточните критерии поиска!\");\n//       }\n//       return this.setState((old) => ({\n//         images: [...old.images, ...resp.hits],\n//       }));\n//     })\n//     .catch((error) => console.log(error))\n//     .finally(() => this.setState({ loading: false }));\n// };\n\n// componentDidUpdate(prevProps, prevState) {\n//   if (\n//     prevState.imageNames !== this.state.imageNames ||\n//     prevState.page !== this.state.page\n//   ) {\n//     this.getImages();\n//   }\n//   if (this.state.page > 1) {\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: \"smooth\",\n//     });\n//   }\n// }\n\n// handleKeyDown = (e) => {\n//   if (e.code === \"Escape\") {\n//     this.onCloseModal();\n//   }\n// };\n\n// handleOverlay = (e) => {\n//   if (e.currentTarget === e.target) {\n//     this.onCloseModal();\n//   }\n// };\n\n// componentDidMount() {\n//   window.addEventListener(\"keydown\", this.handleKeyDown);\n// }\n// componentWillUnmount() {\n//   window.removeEventListener(\"keydown\", this.handleKeyDown);\n// }\n\n// onLoadMore = () => {\n//   this.setState((prevState) => ({\n//     page: prevState.page + 1,\n//   }));\n// };\n\n//   render() {\n//     return (\n//       <>\n//         <SearchBar onSubmit={this.onSubmit} />\n//         <ImageGallery images={this.state.images} onImgClick={this.onImgClick} />\n//         {this.state.loading && <Loader />}\n//         {this.state.images.length > 0 && (\n//           <Button onLoadMore={this.onLoadMore} />\n//         )}\n//         <ToastContainer autoClose={3000} />\n//         {this.state.bigImg && (\n//           <Modal\n//             src={this.state.bigImg}\n//             onCloseModal={this.onCloseModal}\n//             handleOverlay={this.handleOverlay}\n//           />\n//         )}\n//       </>\n//     );\n//   }\n// }\n","export default function fetchImages(page, imageNames) {\n  const url = `https://pixabay.com/api/?q=${imageNames}&page=${page}&key=22945587-13dcce98a35cac559e6949163&image_type=photo&orientation=horizontal&per_page=12`;\n  return fetch(url).then((response) => response.json());\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1ZQzt\",\"Modal\":\"Modal_Modal__1ve3l\",\"closeModal\":\"Modal_closeModal__2pGjk\",\"CloseLogo\":\"Modal_CloseLogo__26GC1\"};"],"sourceRoot":""}